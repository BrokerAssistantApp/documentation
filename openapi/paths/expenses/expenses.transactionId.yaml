patch:
  summary: "Обновить расход по лоту"
  description: "Обновление расхода по лоту невозможно, если лот находится в статусе `sold` или `closed`"
  tags:
    - "Expenses"
  parameters:
    - name: lotId
      in: path
      required: true
      schema:
        type: string
        format: uuid
    - name: transactionId
      in: path
      required: true
      schema:
        type: string
        format: uuid
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          required: [ description, amount ]
          properties:
            description:
              type: string
              example: "Покупка стройматериалов"
            amount:
              type: number
              example: 100000.00
            includeInCost:
              type: boolean
  responses:
    "200":
      description: "Расход обновлён"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "../../openapi.yaml#/components/schemas/BaseResponse"
              - type: object
                properties:
                  message:
                    type: string
                    example: "Расход обновлён"
                  data:
                    type: object
                    properties:
                      totalAmount:
                        type: number
                        example: 100000
                      includedInCostAmount:
                        type: number
                        example: 100000
                      expense:
                        $ref: "../../openapi.yaml#/components/schemas/LotExpense"
                  error:
                    type: "null"
                  meta:
                    type: "null"
    "400":
      description: "Ошибка валидации данных или обновление невозможно"
      content:
        application/json:
          schema:
            oneOf:
              - $ref: "../../openapi.yaml#/components/schemas/ValidationErrorResponse"
              - $ref: "../../openapi.yaml#/components/schemas/BadErrorResponse"
    "401":
      description: "Пользователь не авторизован"
      content:
        application/json:
          schema:
            $ref: "../../openapi.yaml#/components/schemas/UnauthorizedErrorResponse"
    "403":
      description: "Пользователь не имеет доступа"
      content:
        application/json:
          schema:
            $ref: "../../openapi.yaml#/components/schemas/ForbiddenErrorResponse"
    "404":
      description: "Лот или транзакция не найдены"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "../../openapi.yaml#/components/schemas/NotFoundErrorResponse"
              - type: object
                properties:
                  message:
                    type: string
                    example: "Лот или транзакция не найдены"
                  data:
                    type: "null"
                  meta:
                    type: "null"

delete:
  summary: "Удалить расход по лоту"
  description: "Удаление расхода по лоту невозможно, если лот находится в статусе `sold` или `closed`"
  tags:
    - "Expenses"
  parameters:
    - name: lotId
      in: path
      required: true
      schema:
        type: string
        format: uuid
    - name: transactionId
      in: path
      required: true
      schema:
        type: string
        format: uuid
  responses:
    "200":
      description: "Расход успешно удалён"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "../../openapi.yaml#/components/schemas/BaseResponse"
              - type: object
                properties:
                  message:
                    type: string
                    example: "Расход успешно удалён"
                  data:
                    type: object
                    properties:
                      totalAmount:
                        type: number
                        example: 100000
                      includedInCostAmount:
                        type: number
                        example: 100000
                  error:
                    type: "null"
                  meta:
                    type: "null"
    "400":
      description: "Удаление невозможно"
      content:
        application/json:
          schema:
            $ref: "../../openapi.yaml#/components/schemas/BadErrorResponse"
    "401":
      description: "Пользователь не авторизован"
      content:
        application/json:
          schema:
            $ref: "../../openapi.yaml#/components/schemas/UnauthorizedErrorResponse"
    "403":
      description: "Пользователь не имеет доступа"
      content:
        application/json:
          schema:
            $ref: "../../openapi.yaml#/components/schemas/ForbiddenErrorResponse"
    "404":
      description: "Лот или транзакция не найдены"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "../../openapi.yaml#/components/schemas/NotFoundErrorResponse"
              - type: object
                properties:
                  message:
                    type: string
                    example: "Лот или транзакция не найдены"
                  data:
                    type: "null"
                  meta:
                    type: "null"