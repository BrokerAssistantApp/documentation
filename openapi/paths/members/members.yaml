get:
  summary: Получить список участников брокера
  description: Возвращает список всех инвесторов и партнеров, участвующих в лотах брокера.
  tags:
    - Members
  responses:
    "200":
      description: Список участников лотов брокера
      content:
        application/json:
          schema:
            allOf:
              - $ref: "../../openapi.yaml#/components/schemas/BaseResponse"
              - type: object
                properties:
                  message:
                    type: string
                    example: Список участников брокера
                  data:
                    type: array
                    items:
                      $ref: "../../openapi.yaml#/components/schemas/User.WithoutIsBroker"
                  error:
                    type: "null"
                  meta:
                    type: "null"
    "401":
      description: Пользователь не авторизован
      content:
        application/json:
          schema:
            $ref: "../../openapi.yaml#/components/schemas/UnauthorizedErrorResponse"
    "403":
      description: Пользователь не имеет доступа
      content:
        application/json:
          schema:
            $ref: "../../openapi.yaml#/components/schemas/ForbiddenErrorResponse"

post:
  summary: Добавить участника брокера
  description: |
    Позволяет добавить участника брокера
    
    Если пользователь с таким `email`:
    - Уже существует, то привязывает его к списку участников конкретного брокера  
    - Не найден в БД, то создает пользователя с `is_broker = false` и привязывает его к списку участников конкретного брокера
  tags:
    - Members
  security:
    - SessionCookiesJWT: []
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          required:
            - name
            - email
            - auth_method
          properties:
            name:
              type: string
              example: "Иван Партнёр"
            email:
              type: string
              format: email
              example: "ivan.partner@example.com"
  responses:
    "201":
      description: "Участник успешно добавлен"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "../../openapi.yaml#/components/schemas/BaseResponse"
              - type: object
                properties:
                  message:
                    type: string
                    example: "Участник успешно добавлен"
                  data:
                    $ref: "../../openapi.yaml#/components/schemas/User.WithoutIsBroker"
                  error:
                    type: "null"
                  meta:
                    type: "null"
    "401":
      description: "Пользователь не авторизован"
      content:
        application/json:
          schema:
            $ref: "../../openapi.yaml#/components/schemas/UnauthorizedErrorResponse"
    "400":
      description: "Ошибка валидации"
      content:
        application/json:
          schema:
            $ref: "../../openapi.yaml#/components/schemas/ValidationErrorResponse"
    "403":
      description: "Пользователь не имеет доступа"
      content:
        application/json:
          schema:
            $ref: "../../openapi.yaml#/components/schemas/ForbiddenErrorResponse"