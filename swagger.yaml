openapi: 3.1.0
info:
  title: "API BrokerAssistant"
  version: "1.0.0"
  description: |
    BrokerAssistant API –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ª–æ—Ç–∞–º–∏ –Ω–∞ —Ç–æ—Ä–≥–∞—Ö –ø–æ –±–∞–Ω–∫—Ä–æ—Ç—Å—Ç–≤—É, 
    –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –º–µ–∂–¥—É –±—Ä–æ–∫–µ—Ä–∞–º–∏ –∏ –∏–Ω–≤–µ—Å—Ç–æ—Ä–∞–º–∏, –∞ —Ç–∞–∫–∂–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø—Ä–∏–±—ã–ª–∏. 
    
    üîê –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è:
    - –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ —á–µ—Ä–µ–∑ JWT-—Ç–æ–∫–µ–Ω—ã, –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º—ã–µ –≤ `HttpOnly`-cookie.
    - –î–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ª–æ–≥–∏–Ω (`/auth/login`), –ø–æ—Å–ª–µ —á–µ–≥–æ —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –≤ –∑–∞–ø—Ä–æ—Å–∞—Ö.
    - –§—Ä–æ–Ω—Ç–µ–Ω–¥ –¥–æ–ª–∂–µ–Ω –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∑–∞–ø—Ä–æ—Å—ã —Å `withCredentials: true`, —á—Ç–æ–±—ã –±—Ä–∞—É–∑–µ—Ä –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–¥–∞–≤–∞–ª `accessToken`.
    - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ `accessToken` –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ `refreshToken` (`/auth/refresh`).
    - –î–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ —Å–∏—Å—Ç–µ–º—ã –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è `/auth/logout`, —É–¥–∞–ª—è—é—â–∏–π —Å–µ—Å—Å–∏–æ–Ω–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã.
    
    üìÑ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è API:
    - –ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤ –¥–æ—Å—Ç—É–ø–µ–Ω –≤ —Ä–∞–∑–¥–µ–ª–µ "Paths".
    - –û–ø–∏—Å–∞–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ "Schemas".
servers:
  - url: "https://api.brokerassistant.com"
    description: "Production server"
  - url: "http://localhost:8080"
    description: "Development server"
tags:
  - name: "Auth"
    description: "–ú–µ—Ç–æ–¥—ã –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏"
  - name: "Users"
    description: "–ú–µ—Ç–æ–¥—ã —Ä–∞–±–æ—Ç—ã —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"
  - name: "Lots"
    description: "–ú–µ—Ç–æ–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ª–æ—Ç–∞–º–∏"
  - name: "LotStatusHistory"
    description: "–ú–µ—Ç–æ–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞–º–∏ –ª–æ—Ç–æ–≤"
  - name: "Members"
    description: "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏ –ª–æ—Ç–æ–≤"
  - name: "Transactions"
    description: "–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏"
  - name: "Expenses"
    description: "–£—á–µ—Ç —Ä–∞—Å—Ö–æ–¥–æ–≤"
  - name: "Financials"
    description: "–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π —É—á–µ—Ç –ø–æ –ª–æ—Ç–∞–º"
  - name: "Analytics"
    description: "–ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ"
security:
  - SessionCookiesJWT: [ ]

paths:
  /auth/register:
    post:
      summary: "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –±—Ä–æ–∫–µ—Ä–∞"
      security: [ ]
      tags:
        - "Auth"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
                name:
                  type: string
      responses:
        "201":
          description: "–ë—Ä–æ–∫–µ—Ä —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BaseResponse"
                  - type: object
                    properties:
                      message:
                        type: string
                        example: –ë—Ä–æ–∫–µ—Ä —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω
                      data:
                        type: "null"
                      error:
                        type: "null"
                      meta:
                        type: "null"
        "400":
          description: "–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationErrorResponse"

  /auth/login:
    post:
      summary: "–í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É"
      description: "–°–æ–∑–¥–∞–µ—Ç `accessToken` –∏ `refreshToken` (`httpOnly`)"
      security: [ ]
      tags:
        - "Auth"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        "201":
          description: "–£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BaseResponse"
                  - type: object
                    properties:
                      message:
                        type: string
                        example: "–£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É"
                      data:
                        oneOf:
                          - $ref: "#/components/schemas/User.WithIsBroker"
                          - $ref: "#/components/schemas/User.WithoutIsBroker"
                      error:
                        type: "null"
                      meta:
                        type: "null"
        "400":
          description: "–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ValidationErrorResponse"
                  - type: object
                    properties:
                      error:
                        type: object
                        properties:
                          message:
                            type: string
                            example: "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ª–æ–≥–∏–Ω –∏/–∏–ª–∏ –ø–∞—Ä–æ–ª—å"

  /auth/status:
    get:
      summary: "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"
      description: "–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å `accessToken`. –ù–µ –æ–±–Ω–æ–≤–ª—è–µ—Ç `accessToken` –∏/–∏–ª–∏ `RefreshToken`"
      tags:
        - "Auth"
      responses:
        "200":
          description: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BaseResponse"
                  - type: object
                    properties:
                      message:
                        type: string
                        example: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω"
                      data:
                        oneOf:
                          - $ref: "#/components/schemas/User.WithIsBroker"
                          - $ref: "#/components/schemas/User.WithoutIsBroker"
                      error:
                        type: "null"
                      meta:
                        type: "null"
        "401":
          description: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –∏–ª–∏ —Ç–æ–∫–µ–Ω –∏—Å—Ç—ë–∫"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedErrorResponse"

  /auth/refresh:
    post:
      summary: "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ accessToken"
      description: |
        –ï—Å–ª–∏ `accessToken` –∏—Å—Ç—ë–∫, —ç–Ω–¥–ø–æ–∏–Ω—Ç –≤—ã–¥–∞—Å—Ç –Ω–æ–≤—ã–π, –∏—Å–ø–æ–ª—å–∑—É—è `refreshToken`, –∫–æ—Ç–æ—Ä—ã–π —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ `httpOnly`-cookie.

        - –ï—Å–ª–∏ `refreshToken` –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω ‚Üí –≤—ã–¥–∞–µ—Ç –Ω–æ–≤—ã–π `accessToken`.
        - –ï—Å–ª–∏ `refreshToken` –∏—Å—Ç—ë–∫ –∏–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç ‚Üí `401 Unauthorized`, —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–≤—Ç–æ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω.
      tags:
        - "Auth"
      responses:
        "200":
          description: "`accessToken` –æ–±–Ω–æ–≤–ª–µ–Ω"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BaseResponse"
                  - type: object
                    properties:
                      message:
                        type: string
                        example: "–°–µ—Å—Å–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞"
                      data:
                        type: "null"
                      error:
                        type: "null"
                      meta:
                        type: "null"
        "401":
          description: "–û—à–∏–±–∫–∞: `refreshToken` –∏—Å—Ç—ë–∫ –∏–ª–∏ –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedErrorResponse"

  /auth/logout:
    post:
      summary: "–í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã"
      description: "–£–¥–∞–ª—è–µ—Ç `accessToken` –∏ `refreshToken`, —Ä–∞–∑–ª–æ–≥–∏–Ω–∏–≤–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."
      tags:
        - "Auth"
      responses:
        "200":
          description: "–£—Å–ø–µ—à–Ω—ã–π –≤—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BaseResponse"
                  - type: object
                    properties:
                      message:
                        type: string
                        example: "–£—Å–ø–µ—à–Ω—ã–π –≤—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã"
                      data:
                        type: "null"
                      error:
                        type: "null"
                      meta:
                        type: "null"
        "401":
          description: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤—ã—à–µ–ª –∏–ª–∏ `refreshToken` –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedErrorResponse"

  #  /auth/yandex/login:
  #    get:
  #      summary: "–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –Ø–Ω–¥–µ–∫—Å"
  #      tags:
  #        - "Auth"

  #  /auth/yandex/callback:
  #    get:
  #      summary: "–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç code, –ø–æ–ª—É—á–∞–µ—Ç accessToken –æ—Ç –Ø–Ω–¥–µ–∫—Å–∞"
  #      tags:
  #        - "Auth"

  #  /auth/yandex/register:
  #    post:
  #      summary: "–°–æ–∑–¥–∞—ë—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å auth_method = 'yandex'"
  #      tags:
  #        - "Auth"

  #  /auth/yandex/connect:
  #    post:
  #      summary: "–ü—Ä–∏–≤—è–∑—ã–≤–∞–µ—Ç –Ø–Ω–¥–µ–∫—Å ID –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É –∞–∫–∫–∞—É–Ω—Ç—É"
  #      tags:
  #        - "Auth"

  #  /auth/yandex/unlink:
  #    post:
  #      summary: "–û—Ç–≤—è–∑—ã–≤–∞–µ—Ç –Ø–Ω–¥–µ–∫—Å ID"
  #      tags:
  #        - "Auth"

  /users/me:
    get:
      summary: "–ü–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
      description: "–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ, –æ—Å–Ω–æ–≤—ã–≤–∞—è—Å—å –Ω–∞ `accessToken` –≤ `httpOnly`-cookie."
      tags:
        - "Users"
      responses:
        "200":
          description: "–î–∞–Ω–Ω—ã–µ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BaseResponse"
                  - type: object
                    properties:
                      message:
                        type: string
                        example: "–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
                      data:
                        oneOf:
                          - $ref: "#/components/schemas/User.WithIsBroker"
                          - $ref: "#/components/schemas/User.WithoutIsBroker"
                      error:
                        type: "null"
                      meta:
                        type: "null"
        "401":
          description: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedErrorResponse"

    patch:
      summary: "–û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è"
      description: "–ü–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏–∑–º–µ–Ω–∏—Ç—å —Å–≤–æ—ë –∏–º—è"
      tags:
        - "Users"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: "–ù–æ–≤–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
      responses:
        "200":
          description: "–ü—Ä–æ—Ñ–∏–ª—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BaseResponse"
                  - type: object
                    properties:
                      message:
                        type: string
                        example: "–ü—Ä–æ—Ñ–∏–ª—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª—ë–Ω"
                      data:
                        $ref: "#/components/schemas/User"
                      error:
                        type: "null"
                      meta:
                        type: "null"
        "400":
          description: "–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationErrorResponse"
        "401":
          description: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedErrorResponse"

  /users/members:
    get:
      summary: "–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –±—Ä–æ–∫–µ—Ä–∞"
      description: "–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤ –∏ –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤, —É—á–∞—Å—Ç–≤—É—é—â–∏—Ö –≤ –ª–æ—Ç–∞—Ö –±—Ä–æ–∫–µ—Ä–∞."
      tags:
        - "Users"
      responses:
        "200":
          description: "–°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –ª–æ—Ç–æ–≤ –±—Ä–æ–∫–µ—Ä–∞"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BaseResponse"
                  - type: object
                    properties:
                      message:
                        type: string
                        example: "–°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –±—Ä–æ–∫–µ—Ä–∞"
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/User.WithoutIsBroker"
                      error:
                        type: "null"
                      meta:
                        type: "null"
        "401":
          description: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedErrorResponse"

  /lots:
    get:
      summary: "–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ª–æ—Ç–æ–≤"
      tags:
        - "Lots"
      responses:
        "200":
          description: "–°–ø–∏—Å–æ–∫ –ª–æ—Ç–æ–≤"

    post:
      summary: "–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ª–æ—Ç"
      tags:
        - "Lots"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                purchasePrice:
                  type: number
                  format: double
                salePrice:
                  type: number
                  format: double
                brokerCommissionPercent:
                  type: number
                  format: float
                brokerTaxPercent:
                  type: number
                  format: float
                purchaseDate:
                  type: string
                  format: date-time
      responses:
        "201":
          description: "–õ–æ—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BaseResponse"
                  - type: object
                    properties:
                      message:
                        type: string
                        example: "–õ–æ—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω"
                      data:
                        type: object
                        properties:
                          lotId:
                            type: string
                            format: uuid
                      error:
                        type: "null"
                      meta:
                        type: "null"
        "401":
          description: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedErrorResponse"

  /lots/{lotId}:
    get:
      summary: "–ü–æ–ª—É—á–∏—Ç—å –ª–æ—Ç"
      description: "–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ª–æ—Ç–µ."
      tags:
        - "Lots"
      parameters:
        - name: lotId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: "UUID –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ª–æ—Ç–∞"
      responses:
        "200":
          description: "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ª–æ—Ç–µ"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BaseResponse"
                  - type: object
                    properties:
                      message:
                        type: string
                        example: "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ª–æ—Ç–µ"
                      data:
                        $ref: "#/components/schemas/Lot"
                      error:
                        type: "null"
                      meta:
                        type: "null"
        "401":
          description: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedErrorResponse"
        "404":
          description: "–õ–æ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/NotFoundErrorResponse"
                  - type: object
                    properties:
                      message:
                        type: string
                        example: "–õ–æ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω"
                      data:
                        type: "null"
                      meta:
                        type: "null"

    patch:
      summary: "–û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ª–æ—Ç–∞"
      description: "–ü–æ–∑–≤–æ–ª—è–µ—Ç –æ–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ª–æ—Ç–∞ –ø–æ id."
      tags:
        - "Lots"
      parameters:
        - name: lot_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: "UUID –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ª–æ—Ç–∞"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                status:
                  type: string
                  enum: [ purchased, renovation, hold, listed_for_sale, sold, closed ]
                purchasePrice:
                  type: number
                  format: float
                salePrice:
                  type: number
                  format: float
                brokerCommissionPercent:
                  type: number
                  format: float
                brokerTaxPercent:
                  type: number
                  format: float
                purchaseDate:
                  type: string
                  format: date
      responses:
        "200":
          description: "–õ–æ—Ç —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª—ë–Ω"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BaseResponse"
                  - type: object
                    properties:
                      message:
                        type: string
                        example: "–õ–æ—Ç —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª—ë–Ω"
                      data:
                        $ref: "#/components/schemas/Lot"
                      error:
                        type: "null"
                      meta:
                        type: "null"
        "400":
          description: "–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationErrorResponse"
        "401":
          description: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedErrorResponse"
        "404":
          description: "–õ–æ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/NotFoundErrorResponse"
                  - type: object
                    properties:
                      message:
                        type: string
                        example: "–õ–æ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω"
                      data:
                        type: "null"
                      meta:
                        type: "null"

  /lots/{lotId}/status-history:
    get:
      summary: "–ü–æ–ª—É—á–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é —Å—Ç–∞—Ç—É—Å–æ–≤ –ª–æ—Ç–∞"
      description: "–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ö—Ä–æ–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫—É—é –∏—Å—Ç–æ—Ä–∏—é –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–æ–≤ –ª–æ—Ç–∞."
      tags:
        - "LotStatusHistory"
      parameters:
        - name: lotId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: "UUID –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ª–æ—Ç–∞"
      responses:
        "200":
          description: "–ò—Å—Ç–æ—Ä–∏—è —Å—Ç–∞—Ç—É—Å–æ–≤ –ª–æ—Ç–∞"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/BaseResponse"
                  - type: object
                    properties:
                      message:
                        type: string
                        example: "–ò—Å—Ç–æ—Ä–∏—è —Å—Ç–∞—Ç—É—Å–æ–≤ –ª–æ—Ç–∞"
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/LotStatusHistory"
                      error:
                        type: "null"
                      meta:
                        type: "null"
        "401":
          description: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedErrorResponse"
        "404":
          description: "–õ–æ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/NotFoundErrorResponse"
                  - type: object
                    properties:
                      message:
                        type: string
                        example: "–õ–æ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω"
                      data:
                        type: "null"
                      meta:
                        type: "null"

  /lots/{lot_id}/members:
    get:
      summary: "–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –ª–æ—Ç–∞"
      tags:
        - "Members"
      parameters:
        - name: lot_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "–°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤"

    post:
      summary: "–î–æ–±–∞–≤–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ –≤ –ª–æ—Ç"
      tags:
        - "Members"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                member_id:
                  type: string
                share_percent:
                  type: number
      responses:
        "201":
          description: "–£—á–∞—Å—Ç–Ω–∏–∫ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω"

  /lots/{lot_id}/transactions:
    get:
      summary: "–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –ø–æ –ª–æ—Ç—É"
      tags:
        - "Transactions"
      parameters:
        - name: lot_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "–°–ø–∏—Å–æ–∫ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π"

  /lots/{lot_id}/expenses:
    get:
      summary: "–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ä–∞—Å—Ö–æ–¥–æ–≤ –ø–æ –ª–æ—Ç—É"
      tags:
        - "Expenses"
      parameters:
        - name: lot_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "–°–ø–∏—Å–æ–∫ —Ä–∞—Å—Ö–æ–¥–æ–≤"

    post:
      summary: "–î–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å—Ö–æ–¥"
      tags:
        - "Expenses"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                amount:
                  type: number
      responses:
        "201":
          description: "–†–∞—Å—Ö–æ–¥ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω"

  /lots/{lot_id}/financials:
    get:
      summary: "–ü–æ–ª—É—á–∏—Ç—å —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –∏—Ç–æ–≥–∏ –ø–æ –ª–æ—Ç—É"
      tags:
        - "Financials"
      parameters:
        - name: lot_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –∏—Ç–æ–≥–∏"

  /analytics/dashboard:
    get:
      summary: "–ü–æ–ª—É—á–∏—Ç—å –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"
      tags:
        - "Analytics"
      responses:
        "200":
          description: "–î–∞–Ω–Ω—ã–µ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏"

components:
  securitySchemes:
    SessionCookiesJWT:
      type: apiKey
      in: cookie
      name: access_token
      description: "JWT —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞, —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π –≤ cookie —Å —Ñ–ª–∞–≥–æ–º HttpOnly"

  schemas:
    BaseResponse:
      type: object
      properties:
        success:
          type: boolean
          description: "–§–ª–∞–≥ —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏ –∑–∞–ø—Ä–æ—Å–∞ (`true` ‚Äî –∑–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ, `false` ‚Äî –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞)"
        message:
          type: string
          description: "–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞"
        data:
          type: [ object, "null" ]
          nullable: true
          description: "–û—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç–∞. –ú–æ–∂–µ—Ç –±—ã—Ç—å –æ–±—ä–µ–∫—Ç–æ–º –∏–ª–∏ `null`"
        error:
          nullable: true
          description: "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—à–∏–±–∫–µ (–ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –µ—Å–ª–∏ `success: false`)"
          $ref: "#/components/schemas/Error"
        meta:
          nullable: true
          description: "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏"
          $ref: "#/components/schemas/Meta"

    ValidationErrorResponse:
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - type: object
          properties:
            success:
              type: boolean
              enum: [ false ]
            message:
              type: string
              example: "–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏"
            data:
              type: "null"
            error:
              allOf:
                - $ref: "#/components/schemas/Error"
                - type: object
                  properties:
                    code:
                      type: integer
                      example: 400
                    message:
                      type: string
                      example: "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ"
            meta:
              type: "null"

    UnauthorizedErrorResponse:
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - type: object
          properties:
            success:
              type: boolean
              enum: [ false ]
            message:
              type: string
              example: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω"
            data:
              type: "null"
            error:
              allOf:
                - $ref: "#/components/schemas/Error"
                - type: object
                  properties:
                    code:
                      type: integer
                      example: 401
                    message:
                      type: string
                      example: "–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω"
                    details:
                      type: "null"
            meta:
              type: "null"

    NotFoundErrorResponse:
      allOf:
        - $ref: "#/components/schemas/BaseResponse"
        - type: object
          properties:
            success:
              type: boolean
              enum: [ false ]
            message:
              type: string
              example: "–ù–µ –Ω–∞–π–¥–µ–Ω–æ"
            data:
              type: "null"
            error:
              allOf:
                - $ref: "#/components/schemas/Error"
                - type: object
                  properties:
                    code:
                      type: integer
                      example: 404
                    message:
                      type: string
                      example: "–î–∞–Ω–Ω—ã–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç"
                    details:
                      type: "null"
            meta:
              type: "null"

    Error:
      type: [ object, "null" ]
      properties:
        code:
          type: integer
          description: "HTTP-–∫–æ–¥ –æ—à–∏–±–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 400, 404 –∏ —Ç.–¥.)"
        message:
          type: string
          description: "–°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ"
        details:
          type: [ array, "null" ]
          nullable: true
          description: "–°–ø–∏—Å–æ–∫ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–µ—Ç–∞–ª–µ–π –æ–± –æ—à–∏–±–∫–µ. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏."
          items:
            type: object
            properties:
              field:
                type: string
                description: "–ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ–ª—è, –≤—ã–∑–≤–∞–≤—à–µ–≥–æ –æ—à–∏–±–∫—É"
              message:
                type: string
                description: "–°–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ–±–ª–µ–º–µ —Å —ç—Ç–∏–º –ø–æ–ª–µ–º"

    Meta:
      type: [ object, "null" ]

    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        email:
          type: string
          format: email
          description: –ê–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        name:
          type: string
          example: "–ò–≤–∞–Ω–æ–≤ –ü—ë—Ç—Ä –í–∞—Å–∏–ª—å–µ–≤–∏—á"
          description: –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        createdAt:
          type: string
          format: date-time
          description: –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    User.WithIsBroker:
      allOf:
        - $ref: "#/components/schemas/User"
        - type: object
          properties:
            isBroker:
              type: boolean
              description: –£–∫–∞–∑—ã–≤–∞–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—Ä–æ–∫–µ—Ä–æ–º

    User.WithoutIsBroker:
      $ref: "#/components/schemas/User"

    Lot:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ª–æ—Ç–∞
        brokerId:
          type: string
          format: uuid
          description: –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –±—Ä–æ–∫–µ—Ä–∞ (—Å—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
        name:
          type: string
          description: –ù–∞–∑–≤–∞–Ω–∏–µ –ª–æ—Ç–∞
          example: "–ó–µ–º–µ–ª—å–Ω—ã–π —É—á–∞—Å—Ç–æ–∫"
        status:
          type: string
          enum:
            - purchased
            - renovation
            - hold
            - listed_for_sale
            - sold
            - closed
          description: –°—Ç–∞—Ç—É—Å –ª–æ—Ç–∞
          example: "purchased"
        purchasePrice:
          type: number
          format: double
          description: –¶–µ–Ω–∞ –ø–æ–∫—É–ø–∫–∏ –ª–æ—Ç–∞
          example: 1500000.00
        salePrice:
          type: number
          format: double
          description: –¶–µ–Ω–∞ –ø—Ä–æ–¥–∞–∂–∏ –ª–æ—Ç–∞
          example: 3000000.00
        brokerCommissionPercent:
          type: number
          format: float
          description: –ü—Ä–æ—Ü–µ–Ω—Ç –∫–æ–º–∏—Å—Å–∏–∏ –±—Ä–æ–∫–µ—Ä–∞
          example: 25.00
        brokerTaxPercent:
          type: number
          format: float
          description: –ü—Ä–æ—Ü–µ–Ω—Ç –Ω–∞–ª–æ–≥–∞ —Å –±—Ä–æ–∫–µ—Ä–∞
          example: 7.00
        purchaseDate:
          type: string
          format: date
          description: –î–∞—Ç–∞ –ø–æ–∫—É–ø–∫–∏ –ª–æ—Ç–∞
        updatedAt:
          type: string
          format: date-time
          description: –í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏
        createdAt:
          type: string
          format: date-time
          description: –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏

    LotStatusHistory:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∑–∞–ø–∏—Å–∏ –∏—Å—Ç–æ—Ä–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –ª–æ—Ç–∞
        status:
          type: string
          enum:
            - purchased
            - renovation
            - hold
            - listed_for_sale
            - sold
            - closed
          description: –°—Ç–∞—Ç—É—Å –ª–æ—Ç–∞
        createdAt:
          type: string
          format: date-time
          description: –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏

    LotMember:
      type: object
      properties:
        lotId:
          type: string
          format: uuid
          description: –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ª–æ—Ç–∞
        memberId:
          type: string
          format: uuid
          nullable: true
          description: –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —É—á–∞—Å—Ç–Ω–∏–∫–∞
        referralMemberId:
          type: string
          format: uuid
          nullable: true
          description: –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞
        sharePercent:
          type: number
          format: double
          description: –î–æ–ª—è —É—á–∞—Å—Ç–Ω–∏–∫–∞ (%) –≤ –ª–æ—Ç–µ
        referralFeePercent:
          type: number
          format: double
          description: –ü—Ä–æ—Ü–µ–Ω—Ç —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –∫–æ–º–∏—Å—Å–∏–∏

    LotExpense:
      type: object
      properties:
        lotId:
          type: string
          format: uuid
          description: –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ª–æ—Ç–∞
        transactionId:
          type: string
          format: uuid
          description: –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
        description:
          type: string
          description: –û–ø–∏—Å–∞–Ω–∏–µ —Ä–∞—Å—Ö–æ–¥–æ–≤

    LotTransaction:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
        lotId:
          type: string
          format: uuid
          description: –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ª–æ—Ç–∞
        userId:
          type: string
          format: uuid
          nullable: true
          description: –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–≤—è–∑–∞–Ω–Ω–æ–≥–æ —Å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–µ–π
        type:
          type: string
          enum:
            - investment
            - payout
            - broker_commission
            - broker_tax
            - referral_fee
            - expense
          description: –¢–∏–ø —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
        amount:
          type: number
          format: double
          description: –°—É–º–º–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
        updatedAt:
          type: string
          format: date-time
          description: –í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏
        createdAt:
          type: string
          format: date-time
          description: –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏

    LotFinancials:
      type: object
      properties:
        lotId:
          type: string
          format: uuid
          description: –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ª–æ—Ç–∞
        purchasePrice:
          type: number
          format: double
          description: –¶–µ–Ω–∞ –ø–æ–∫—É–ø–∫–∏ –ª–æ—Ç–∞
        salePrice:
          type: number
          format: double
          description: –¶–µ–Ω–∞ –ø—Ä–æ–¥–∞–∂–∏ –ª–æ—Ç–∞
        grossProfit:
          type: number
          format: double
          description: –í–∞–ª–æ–≤–∞—è –ø—Ä–∏–±—ã–ª—å
        netProfit:
          type: number
          format: double
          description: –ß–∏—Å—Ç–∞—è –ø—Ä–∏–±—ã–ª—å
        brokerCommission:
          type: number
          format: double
          description: –ö–æ–º–∏—Å—Å–∏—è –±—Ä–æ–∫–µ—Ä–∞
        brokerTax:
          type: number
          format: double
          description: –ù–∞–ª–æ–≥ –±—Ä–æ–∫–µ—Ä–∞
        totalInvestments:
          type: number
          format: double
          description: –û–±—â–∞—è —Å—É–º–º–∞ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π
        totalPayouts:
          type: number
          format: double
          description: –û–±—â–∞—è —Å—É–º–º–∞ –≤—ã–ø–ª–∞—Ç
        totalReferralFees:
          type: number
          format: double
          description: –û–±—â–∞—è —Å—É–º–º–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–π
        createdAt:
          type: string
          format: date-time
          description: –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏